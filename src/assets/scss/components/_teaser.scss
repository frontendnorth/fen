/**
 *	Teaser
 *
 *	Primary for blogs posts, this.
 *	Thanks to: https://inclusive-components.design/cards/
 *
 **/

.c-teaser {

	clear: both;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: flex-start;
	margin-bottom: $space-xl;
	position: relative;

	// When one teaser follows another (shouldn't impact grids/lists, etc.)
	& + & {
		margin-top: $space-xxl;
	}

	@at-root .o-speaker-grid & {
		margin-bottom: inherit;
	}

	// To differentiate from `__image` - not always required
	&__text {
		flex: 1 0 0;
		// When used, assume an image is alongside, so…
		margin-top: $space-l;
	}

	&__title {
		flex: 0 1 100%;
		font-size: map-get($type-scale-major-second, l);
		font-weight: 900;
		margin-top: 0;
		margin-bottom: $space-s;

		// Cheers https://codepen.io/m2rt/pen/KwXgaG for funky effect.
		a {
			color: $color-brand-primary;
			text-decoration: none;

			@supports (-webkit-text-fill-color: transparent) {
				-webkit-background-clip: text; // TODO: deal with via PostCSS (or whatever)
				background-clip: text;
				-webkit-text-fill-color: transparent;
				background-image: linear-gradient(
					to right,
					$color-brand-secondary,
					$color-brand-secondary 50%,
					$color-brand-primary 50%);
				background-size: 200% 100%;
				background-position: 100%;
				transition-property: background, color;
				transition-duration: 0.3s;
				transition-timing-function: cubic-bezier(0.000, 0.000, 0.230, 1);

				@media (prefers-reduced-motion: reduce) {
					transition-duration: 0s;
				}
			}

			&:focus,
			&:hover {
				background-position: 0%;
				color: $color-brand-secondary;
			}

			&::after {
				content: '';
				bottom: 0;
				left: 0;
				position: absolute;
				right: 0;
				top: 0;
			}
		}

		// Adopts more styles from its default element
		&--default {
			// Only h2 for now…
			@at-root h2#{&} {
				font-size: map-get($type-scale-major-second, xxl);
				line-height: 1.1;

				@include mq(lg) {
					font-size: map-get($type-scale, xl);
				}
			}
		}
	}

	&__meta {
		display: block;
		flex: 0 1 100%;
		font-size: map-get($type-scale-major-second, xs);
		font-weight: 600;
		line-height: 1.3;
		margin-bottom: 0;

		&--important {
			font-size: map-get($type-scale-major-second, s);
		}
	}

	&__excerpt {
		margin-top: $space-default; // consistent space with or without meta
		font-size: map-get($type-scale-major-second, s);

		> *:first-child {
			margin-top: 0;
		}

		> *:last-child {
			margin-bottom: 0;
		}
	}

	h2 + & {
		margin-top: -.5em;
	}

	// If used, requires `__text` to accompany this
	&__image {
		background: $color-text-base;
		border-radius: $radius-default;
		flex: 0 0 auto;
		height: 100px;
		margin-right: $space-l;
		overflow: hidden; // for the rounded corners
		position: relative;
		order: -1;
		z-index: -1;
		width: 100px;
		transition: all 0.1s linear;

		// Split declaration so that lack of support for `:focus-within`
		// does not result in rejection of everything
		@mixin image-interaction {
			filter: brightness(1.05);
		}

		// TODO: Zoom in effect instead?
		.c-teaser:hover & {
			@include image-interaction();
		}
		.c-teaser:focus-within & {
			@include image-interaction();
		}

		img {
			display: block; // die, whitespace
			height: 100%;
			object-fit: cover;
			width: 100%;
		}
	}


	// Variations
	// Media (has an image)
	&--media {
		flex-wrap: nowrap;
	}

	// Speaker - used (large) on speaker landing page
	&--speaker {
		@include mq(sm) {
			flex-direction: column;

		.c-teaser {
			&__title {
				// font-size: map-get($type-scale-major-second, xl);
				font-size: map-get($type-scale-major-second, xxl);
				line-height: 1.1;
				text-transform: uppercase;

				@include mq(lg) {
					font-size: map-get($type-scale, xl);
				}
			}

			&__image {
				border-radius: ($radius-default *2);
				height: auto;
				margin-right: 0;
				width: 100%;
			}
		}
		}
	}

	// Inverted
	&--inverted {
	.c-teaser {
		&__title {
			a {
				color: $color-text-white;

				@supports (-webkit-text-fill-color: transparent) {
					background-image: linear-gradient(
						to right,
						$color-brand-secondary,
						$color-brand-secondary 50%,
						$color-text-white 50%);
				}
			}
		}

		&__meta {
			color: rgba($color-text-white, .7);
		}
	}
	}

}
